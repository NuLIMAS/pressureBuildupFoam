/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.7.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices        
(
    (0 0 -.17) //0
    (0.61 0 -.17)//1
    (0.61 0.02 -.17)//2
    (0 0.02 -.17)//3
    (0 0 0)//4
    (0.61 0 0)//5
    (0.61 0.02 0)//6
    (0 0.02 0)//7
    (0.3 0 0)//8
    (0.3 0.02 0)//9
    (0.6 0 0)//10
    (0.6 0.02 0)//11
    (0.3 0 -.17)//12
    (0.3 0.02 -.17)//13
    (0.6 0 -.17)//14
    (0.6 0.02 -.17)//15

    (0.3 0 -.015)//16
    (0.3 0.02 -.015)//17
    (0.6 0 -.015)//18
    (0.6 0.02 -0.015)//19
    (0 0 -0.015)//20
    (0 0.02 -0.015)//21
    (0.61 0 -0.015)//22
    (0.61 0.02 -0.015)//23

    (0.3 0 -.015)//24
    (0.3 0.02 -.015)//25
    (0.6 0 -.015)//26
    (0.6 0.02 -0.015)//27
    (0.3 0 .015)//28
    (0.3 0.02 .015)//29
    (0.6 0 .015)//30
    (0.6 0.02 0.015)//31
    
    (0.3 0 -.18)//32
    (0.3 0.02 -.18)//33
    (0.6 0 -.18)//34
    (0.6 0.02 -.18)//35
    
    (0.3 0 -.17)//36
    (0.3 0.02 -.17)//37
    (0.3 0 -.015)//38
    (0.3 0.02 -.015)//39
    
    (0.6 0 -.17)//40
    (0.6 0.02 -.17)//41
    (0.6 0 -.015)//42
    (0.6 0.02 -0.015)//43
     (0.6 0 0)//44
    (0.6 0.02 0)//45
    
    );

blocks          
(
    hex (0 12 13 3 20 16 17 21) (100 1 50) simpleGrading (1 1 1)
    hex (20 16 17 21 4 8 9 7) (100 1 10) simpleGrading (1 1 1)
    hex (12 14 15 13 16 18 19 17) (100 1 50) simpleGrading (1 1 1)
    hex (40 1 2 41 42 22 23 43) (1 1 50) simpleGrading (1 1 1)
    hex (42 22 23 43 44 5 6 45) (1 1 10) simpleGrading (1 1 1)

    hex (24 26 27 25 28 30 31 29) (100 1 20) simpleGrading (1 1 1)
   // hex (32 34 35 33 36 40 41 37 ) (100 1 1) simpleGrading (1 1 1)
);

edges           
(
);

boundary
(

    seaBed
    {
          type wall;
          faces
         (
	  (4 8 9 7)
	//  (10 5 6 11)	
	  (16 18 19 17)
	  (16 8 9 17)
        //  (18 10 11 19)	
         ) ;
    }
    

    
    
     frontBack
    {
          type empty;
          faces
         (
	 // (3 21 17 13)
	 // (21 7 9 17)
	  
	 // (15 19 23 2)
	 // (19 11 6 23)          
         // (0 12 16 20)
          (20 16 8 4)          
       (21 17 9 7)  
       //   (14 1 22 18)
       //   (18 22 5 10) 
       
      (42 22 5 44)
      (45 43 23 6) 
      (12 14 18 16)
      (13 17 19 15)
      (24 28 30 26)
      (25 29 31 27)
      
      (20 0 12 16)
      (21 3 13 17)
      (22 1 40 42)
      (23 2 41 43)
      //(36 32 34 40)
     // (37 33 35 41)

         ) ;
    }  
    
    soilDomainBottom
    {
          type wall;
          faces
         (
	  (0 12 13 3 )
	 (12 14 15 13 )
	//  (14 1 2 15 )
	  	
         ) ;
    } 
    
  /*  soilDomainBottom1
    {
          type wall;
          faces
         (
	//(36 40 41 37)
	  	
         ) ;
    } 
    */
    
    left
    {
    type wall;
        //  type cyclic;
        //  neighbourPatch  right;
         faces
        (
            (0 20 21 3)
            (20 4 7 21)
        //   ( 16 12 13 17)
          
        );
          
    }
     
    /*     left1
    {
    type wall;
        //  type cyclic;
        //  neighbourPatch  right;
         faces
         (
    //    (44 42 43 45) 
     //   (36 38 39 37)
          
        );
          
    }
     */
     
     right
    {
    type wall;
         // type cyclic;
         // neighbourPatch  left;
         faces
        (
           // (1 22 23 2)
           // (22 5 6 23)
           (18 14 15 19)
        );
          
    }  

     right1
    {
    type wall;
         // type cyclic;
         // neighbourPatch  left;
         faces
        (
         (42 40 41 43)
         (44 42 43 45)
        );
          
    } 

     right2
    {
    type wall;
         // type cyclic;
         // neighbourPatch  left;
         faces
        (
         (1 2 23 22)
         (40 1 2 41)
         (44 5 6 45)
         (5 22 23 6)
        );
          
    } 



    rockerTop
    {
          type wall;
          faces
         (
             (28 30 31 29)
             //(31 30 26 27)	
             //(24 28 29 25)	
         );
    }
    rocker
    {
          type wall;
          faces
         (
             (24 25 27 26)
             (31 30 26 27)	
             (24 28 29 25)	
         ) ;
    }

   



);


mergePatchPairs 
(
);

// ************************************************************************* //
